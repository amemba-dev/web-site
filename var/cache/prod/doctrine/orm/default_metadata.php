<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Image__CLASSMETADATA__' => 0,
'App__Entity__CotisationTransaction__CLASSMETADATA__' => 1,
'App__Entity__Transaction__CLASSMETADATA__' => 2,
'App__Entity__Realisation__CLASSMETADATA__' => 3,
'App__Entity__DetailCommande__CLASSMETADATA__' => 4,
'App__Entity__CategorieArticle__CLASSMETADATA__' => 5,
'App__Entity__Client__CLASSMETADATA__' => 6,
'App__Entity__User__CLASSMETADATA__' => 7,
'App__Entity__PageAbout__CLASSMETADATA__' => 8,
'App__Entity__Commentaire__CLASSMETADATA__' => 9,
'App__Entity__CategorieEvenement__CLASSMETADATA__' => 10,
'App__Entity__Admin__CLASSMETADATA__' => 11,
'App__Entity__Achat__CLASSMETADATA__' => 12,
'App__Entity__PostesBureau__CLASSMETADATA__' => 13,
'App__Entity__MembreBureau__CLASSMETADATA__' => 14,
'App__Entity__Wallet__CLASSMETADATA__' => 15,
'App__Entity__Commande__CLASSMETADATA__' => 16,
'App__Entity__Article__CLASSMETADATA__' => 17,
'App__Entity__Partenariat__CLASSMETADATA__' => 18,
'App__Entity__OffreEmplois__CLASSMETADATA__' => 19,
'App__Entity__ResetPassword__CLASSMETADATA__' => 20,
'App__Entity__Entreprise__CLASSMETADATA__' => 21,
'App__Entity__Cotisation__CLASSMETADATA__' => 22,
'App__Entity__PageAccueil__CLASSMETADATA__' => 23,
'App__Entity__Demande__CLASSMETADATA__' => 24,
'App__Entity__Depot__CLASSMETADATA__' => 25,
'App__Entity__Membre__CLASSMETADATA__' => 26,
'App__Entity__Evenement__CLASSMETADATA__' => 27,
'App__Entity__Letter__CLASSMETADATA__' => 28,
'App__Entity__Abonne__CLASSMETADATA__' => 29,
'App__Entity__Thematique__CLASSMETADATA__' => 30,
'App__Entity__Produit__CLASSMETADATA__' => 31,
'App__Entity__Sujet__CLASSMETADATA__' => 32,
'App__Entity__Footer__CLASSMETADATA__' => 33,
'App__Entity__CategorieProduit__CLASSMETADATA__' => 34,
'App__Entity__Partenaire__CLASSMETADATA__' => 35,
'App__Entity__SuperAdmin__CLASSMETADATA__' => 36,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Image',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Image',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ImageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'path' => [
                            'fieldName' => 'path',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'path',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'path' => 'path',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'path' => 'path',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'image',
                    ],
                ],
                'associationMappings' => [
                    [
                        'produit' => [
                            'fieldName' => 'produit',
                            'joinColumns' => [
                                [
                                    'name' => 'produit_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'images',
                            'targetEntity' => 'App\\Entity\\Produit',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Image',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'produit_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'produit_id' => 'produit_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'produit_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'evenement' => [
                            'fieldName' => 'evenement',
                            'joinColumns' => [
                                [
                                    'name' => 'evenement_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'images',
                            'targetEntity' => 'App\\Entity\\Evenement',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Image',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'evenement_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'evenement_id' => 'evenement_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'evenement_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'article' => [
                            'fieldName' => 'article',
                            'joinColumns' => [
                                [
                                    'name' => 'article_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'images',
                            'targetEntity' => 'App\\Entity\\Article',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Image',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'article_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'article_id' => 'article_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'article_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\CotisationTransaction',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Transaction',
                ],
                'customRepositoryClassName' => [
                    'App\\Entity\\CotisationTransactionRepository',
                ],
                'parentClasses' => [
                    [
                        'App\\Entity\\Transaction',
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'inheritanceType' => [
                    2,
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'montant' => [
                            'fieldName' => 'montant',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'montant',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'type',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'montant' => 'montant',
                        'type' => 'type',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'montant' => 'montant',
                        'type' => 'type',
                    ],
                ],
                'discriminatorValue' => [
                    'cotisation',
                ],
                'discriminatorMap' => [
                    [
                        'achat' => 'App\\Entity\\Achat',
                        'depot' => 'App\\Entity\\Depot',
                        'cotisation' => 'App\\Entity\\CotisationTransaction',
                    ],
                ],
                'discriminatorColumn' => [
                    [
                        'name' => 'dtype',
                        'type' => 'string',
                        'length' => 255,
                        'fieldName' => 'dtype',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'cotisation_transaction',
                    ],
                ],
                'associationMappings' => [
                    [
                        'wallet' => [
                            'fieldName' => 'wallet',
                            'joinColumns' => [
                                [
                                    'name' => 'wallet_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'transactions',
                            'targetEntity' => 'App\\Entity\\Wallet',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Transaction',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'wallet_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'wallet_id' => 'wallet_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'wallet_id',
                            ],
                            'orphanRemoval' => false,
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Transaction',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Transaction',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TransactionRepository',
                ],
                'subClasses' => [
                    [
                        'App\\Entity\\Achat',
                        'App\\Entity\\Depot',
                        'App\\Entity\\CotisationTransaction',
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'inheritanceType' => [
                    2,
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                        ],
                        'montant' => [
                            'fieldName' => 'montant',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'montant',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'type',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'montant' => 'montant',
                        'type' => 'type',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'montant' => 'montant',
                        'type' => 'type',
                    ],
                ],
                'discriminatorMap' => [
                    [
                        'achat' => 'App\\Entity\\Achat',
                        'depot' => 'App\\Entity\\Depot',
                        'cotisation' => 'App\\Entity\\CotisationTransaction',
                    ],
                ],
                'discriminatorColumn' => [
                    [
                        'name' => 'dtype',
                        'type' => 'string',
                        'length' => 255,
                        'fieldName' => 'dtype',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'transaction',
                    ],
                ],
                'associationMappings' => [
                    [
                        'wallet' => [
                            'fieldName' => 'wallet',
                            'joinColumns' => [
                                [
                                    'name' => 'wallet_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'transactions',
                            'targetEntity' => 'App\\Entity\\Wallet',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Transaction',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'wallet_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'wallet_id' => 'wallet_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'wallet_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Realisation',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Realisation',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\RealisationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'titre' => [
                            'fieldName' => 'titre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'titre',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'image' => [
                            'fieldName' => 'image',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'image',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                        'miniDescription' => [
                            'fieldName' => 'miniDescription',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mini_description',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'description' => 'description',
                        'image' => 'image',
                        'etat' => 'etat',
                        'mini_description' => 'miniDescription',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'description' => 'description',
                        'image' => 'image',
                        'etat' => 'etat',
                        'miniDescription' => 'mini_description',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'realisation',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\DetailCommande',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\DetailCommande',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DetailCommandeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'quantite' => [
                            'fieldName' => 'quantite',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'quantite',
                        ],
                        'prix' => [
                            'fieldName' => 'prix',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prix',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'quantite' => 'quantite',
                        'prix' => 'prix',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'quantite' => 'quantite',
                        'prix' => 'prix',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'detail_commande',
                    ],
                ],
                'associationMappings' => [
                    [
                        'commande' => [
                            'fieldName' => 'commande',
                            'joinColumns' => [
                                [
                                    'name' => 'commande_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailCommandes',
                            'targetEntity' => 'App\\Entity\\Commande',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailCommande',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'commande_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'commande_id' => 'commande_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'commande_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'produit' => [
                            'fieldName' => 'produit',
                            'joinColumns' => [
                                [
                                    'name' => 'produit_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'detailCommandes',
                            'targetEntity' => 'App\\Entity\\Produit',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DetailCommande',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'produit_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'produit_id' => 'produit_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'produit_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\CategorieArticle',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\CategorieArticle',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CategorieArticleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'libelle' => [
                            'fieldName' => 'libelle',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'libelle',
                        ],
                        'status' => [
                            'fieldName' => 'status',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'status',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                        'status' => 'status',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                        'status' => 'status',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'categorie_article',
                    ],
                ],
                'associationMappings' => [
                    [
                        'articles' => [
                            'fieldName' => 'articles',
                            'mappedBy' => 'categorieArticle',
                            'targetEntity' => 'App\\Entity\\Article',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\CategorieArticle',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Client',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ClientRepository',
                ],
                'parentClasses' => [
                    [
                        'App\\Entity\\User',
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'inheritanceType' => [
                    2,
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'discriminatorValue' => [
                    'client',
                ],
                'discriminatorMap' => [
                    [
                        'membre' => 'App\\Entity\\Membre',
                        'client' => 'App\\Entity\\Client',
                        'admin' => 'App\\Entity\\Admin',
                        'super_admin' => 'App\\Entity\\SuperAdmin',
                    ],
                ],
                'discriminatorColumn' => [
                    [
                        'name' => 'dtype',
                        'type' => 'string',
                        'length' => 255,
                        'fieldName' => 'dtype',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'client',
                    ],
                ],
                'associationMappings' => [
                    [
                        'articles' => [
                            'fieldName' => 'articles',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Article',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'sujets' => [
                            'fieldName' => 'sujets',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Sujet',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'commandes' => [
                            'fieldName' => 'commandes',
                            'mappedBy' => 'client',
                            'targetEntity' => 'App\\Entity\\Commande',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'subClasses' => [
                    [
                        'App\\Entity\\Membre',
                        'App\\Entity\\Client',
                        'App\\Entity\\Admin',
                        'App\\Entity\\SuperAdmin',
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'inheritanceType' => [
                    2,
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'discriminatorMap' => [
                    [
                        'membre' => 'App\\Entity\\Membre',
                        'client' => 'App\\Entity\\Client',
                        'admin' => 'App\\Entity\\Admin',
                        'super_admin' => 'App\\Entity\\SuperAdmin',
                    ],
                ],
                'discriminatorColumn' => [
                    [
                        'name' => 'dtype',
                        'type' => 'string',
                        'length' => 255,
                        'fieldName' => 'dtype',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'articles' => [
                            'fieldName' => 'articles',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Article',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'sujets' => [
                            'fieldName' => 'sujets',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Sujet',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'commandes' => [
                            'fieldName' => 'commandes',
                            'mappedBy' => 'client',
                            'targetEntity' => 'App\\Entity\\Commande',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\PageAbout',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\PageAbout',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PageAboutRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'missionTitre' => [
                            'fieldName' => 'missionTitre',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mission_titre',
                        ],
                        'missionText' => [
                            'fieldName' => 'missionText',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mission_text',
                        ],
                        'motTitre' => [
                            'fieldName' => 'motTitre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mot_titre',
                        ],
                        'motContenu' => [
                            'fieldName' => 'motContenu',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mot_contenu',
                        ],
                        'missionPath' => [
                            'fieldName' => 'missionPath',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'mission_path',
                        ],
                        'motPath' => [
                            'fieldName' => 'motPath',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'mot_path',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'mission_titre' => 'missionTitre',
                        'mission_text' => 'missionText',
                        'mot_titre' => 'motTitre',
                        'mot_contenu' => 'motContenu',
                        'mission_path' => 'missionPath',
                        'mot_path' => 'motPath',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'missionTitre' => 'mission_titre',
                        'missionText' => 'mission_text',
                        'motTitre' => 'mot_titre',
                        'motContenu' => 'mot_contenu',
                        'missionPath' => 'mission_path',
                        'motPath' => 'mot_path',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'page_about',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Commentaire',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Commentaire',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CommentaireRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                        ],
                        'isVisible' => [
                            'fieldName' => 'isVisible',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'is_visible',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'date' => 'date',
                        'is_visible' => 'isVisible',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'date' => 'date',
                        'isVisible' => 'is_visible',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'commentaire',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Commentaire',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'evenement' => [
                            'fieldName' => 'evenement',
                            'joinColumns' => [
                                [
                                    'name' => 'evenement_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'commentaires',
                            'targetEntity' => 'App\\Entity\\Evenement',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Commentaire',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'evenement_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'evenement_id' => 'evenement_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'evenement_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'article' => [
                            'fieldName' => 'article',
                            'joinColumns' => [
                                [
                                    'name' => 'article_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'commentaires',
                            'targetEntity' => 'App\\Entity\\Article',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Commentaire',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'article_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'article_id' => 'article_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'article_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'sujet' => [
                            'fieldName' => 'sujet',
                            'joinColumns' => [
                                [
                                    'name' => 'sujet_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'commentaires',
                            'targetEntity' => 'App\\Entity\\Sujet',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Commentaire',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'sujet_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'sujet_id' => 'sujet_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'sujet_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\CategorieEvenement',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\CategorieEvenement',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CategorieEvenementRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'categorie_evenement',
                    ],
                ],
                'associationMappings' => [
                    [
                        'evenements' => [
                            'fieldName' => 'evenements',
                            'mappedBy' => 'categorie',
                            'targetEntity' => 'App\\Entity\\Evenement',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\CategorieEvenement',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Admin',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AdminRepository',
                ],
                'parentClasses' => [
                    [
                        'App\\Entity\\User',
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'inheritanceType' => [
                    2,
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'discriminatorValue' => [
                    'admin',
                ],
                'discriminatorMap' => [
                    [
                        'membre' => 'App\\Entity\\Membre',
                        'client' => 'App\\Entity\\Client',
                        'admin' => 'App\\Entity\\Admin',
                        'super_admin' => 'App\\Entity\\SuperAdmin',
                    ],
                ],
                'discriminatorColumn' => [
                    [
                        'name' => 'dtype',
                        'type' => 'string',
                        'length' => 255,
                        'fieldName' => 'dtype',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'admin',
                    ],
                ],
                'associationMappings' => [
                    [
                        'articles' => [
                            'fieldName' => 'articles',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Article',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'sujets' => [
                            'fieldName' => 'sujets',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Sujet',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'commandes' => [
                            'fieldName' => 'commandes',
                            'mappedBy' => 'client',
                            'targetEntity' => 'App\\Entity\\Commande',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Achat',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Transaction',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AchatRepository',
                ],
                'parentClasses' => [
                    [
                        'App\\Entity\\Transaction',
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'inheritanceType' => [
                    2,
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'montant' => [
                            'fieldName' => 'montant',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'montant',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'type',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'montant' => 'montant',
                        'type' => 'type',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'montant' => 'montant',
                        'type' => 'type',
                    ],
                ],
                'discriminatorValue' => [
                    'achat',
                ],
                'discriminatorMap' => [
                    [
                        'achat' => 'App\\Entity\\Achat',
                        'depot' => 'App\\Entity\\Depot',
                        'cotisation' => 'App\\Entity\\CotisationTransaction',
                    ],
                ],
                'discriminatorColumn' => [
                    [
                        'name' => 'dtype',
                        'type' => 'string',
                        'length' => 255,
                        'fieldName' => 'dtype',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'achat',
                    ],
                ],
                'associationMappings' => [
                    [
                        'wallet' => [
                            'fieldName' => 'wallet',
                            'joinColumns' => [
                                [
                                    'name' => 'wallet_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'transactions',
                            'targetEntity' => 'App\\Entity\\Wallet',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Transaction',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'wallet_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'wallet_id' => 'wallet_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'wallet_id',
                            ],
                            'orphanRemoval' => false,
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'commande' => [
                            'fieldName' => 'commande',
                            'targetEntity' => 'App\\Entity\\Commande',
                            'joinColumns' => [
                                [
                                    'name' => 'commande_id',
                                    'unique' => true,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Achat',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'commande_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'commande_id' => 'commande_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'commande_id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\PostesBureau',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\PostesBureau',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PostesBureauRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'libelle' => [
                            'fieldName' => 'libelle',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'libelle',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'postes_bureau',
                    ],
                ],
                'associationMappings' => [
                    [
                        'membresBureau' => [
                            'fieldName' => 'membresBureau',
                            'mappedBy' => 'fonction',
                            'targetEntity' => 'App\\Entity\\MembreBureau',
                            'cascade' => [],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\PostesBureau',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\MembreBureau',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\MembreBureau',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MembreBureauRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nomComplet' => [
                            'fieldName' => 'nomComplet',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom_complet',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom_complet' => 'nomComplet',
                        'etat' => 'etat',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nomComplet' => 'nom_complet',
                        'etat' => 'etat',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'membre_bureau',
                    ],
                ],
                'associationMappings' => [
                    [
                        'fonction' => [
                            'fieldName' => 'fonction',
                            'joinColumns' => [
                                [
                                    'name' => 'fonction_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'membresBureau',
                            'targetEntity' => 'App\\Entity\\PostesBureau',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\MembreBureau',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'fonction_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'fonction_id' => 'fonction_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'fonction_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'membre' => [
                            'fieldName' => 'membre',
                            'targetEntity' => 'App\\Entity\\Membre',
                            'joinColumns' => [
                                [
                                    'name' => 'membre_id',
                                    'unique' => true,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\MembreBureau',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'membre_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'membre_id' => 'membre_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'membre_id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Wallet',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Wallet',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\WalletRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'solde' => [
                            'fieldName' => 'solde',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'solde',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'solde' => 'solde',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'solde' => 'solde',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'wallet',
                    ],
                ],
                'associationMappings' => [
                    [
                        'transactions' => [
                            'fieldName' => 'transactions',
                            'mappedBy' => 'wallet',
                            'targetEntity' => 'App\\Entity\\Transaction',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Wallet',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'membre' => [
                            'fieldName' => 'membre',
                            'targetEntity' => 'App\\Entity\\Membre',
                            'joinColumns' => [
                                [
                                    'name' => 'membre_id',
                                    'unique' => true,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => 'wallet',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Wallet',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'membre_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'membre_id' => 'membre_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'membre_id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Commande',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Commande',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CommandeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'reference' => [
                            'fieldName' => 'reference',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'reference',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                        'prix_total' => [
                            'fieldName' => 'prix_total',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prix_total',
                        ],
                        'moyen' => [
                            'fieldName' => 'moyen',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'moyen',
                        ],
                        'numero' => [
                            'fieldName' => 'numero',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'numero',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'reference' => 'reference',
                        'date' => 'date',
                        'etat' => 'etat',
                        'prix_total' => 'prix_total',
                        'moyen' => 'moyen',
                        'numero' => 'numero',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'reference' => 'reference',
                        'date' => 'date',
                        'etat' => 'etat',
                        'prix_total' => 'prix_total',
                        'moyen' => 'moyen',
                        'numero' => 'numero',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'commande',
                    ],
                ],
                'associationMappings' => [
                    [
                        'detailCommandes' => [
                            'fieldName' => 'detailCommandes',
                            'mappedBy' => 'commande',
                            'targetEntity' => 'App\\Entity\\DetailCommande',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Commande',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'client' => [
                            'fieldName' => 'client',
                            'joinColumns' => [
                                [
                                    'name' => 'client_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'commandes',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Commande',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'client_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'client_id' => 'client_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'client_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Article',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Article',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ArticleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'titre' => [
                            'fieldName' => 'titre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'titre',
                        ],
                        'contenu' => [
                            'fieldName' => 'contenu',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 65535,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'contenu',
                        ],
                        'statut' => [
                            'fieldName' => 'statut',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'statut',
                        ],
                        'lisibilite' => [
                            'fieldName' => 'lisibilite',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'lisibilite',
                        ],
                        'slug' => [
                            'fieldName' => 'slug',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'slug',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created_at',
                        ],
                        'publishedAt' => [
                            'fieldName' => 'publishedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'published_at',
                        ],
                        'refused' => [
                            'fieldName' => 'refused',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'refused',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'contenu' => 'contenu',
                        'statut' => 'statut',
                        'lisibilite' => 'lisibilite',
                        'slug' => 'slug',
                        'created_at' => 'createdAt',
                        'published_at' => 'publishedAt',
                        'refused' => 'refused',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'contenu' => 'contenu',
                        'statut' => 'statut',
                        'lisibilite' => 'lisibilite',
                        'slug' => 'slug',
                        'createdAt' => 'created_at',
                        'publishedAt' => 'published_at',
                        'refused' => 'refused',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'article',
                    ],
                ],
                'associationMappings' => [
                    [
                        'commentaires' => [
                            'fieldName' => 'commentaires',
                            'mappedBy' => 'article',
                            'targetEntity' => 'App\\Entity\\Commentaire',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Article',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'auteur' => [
                            'fieldName' => 'auteur',
                            'joinColumns' => [
                                [
                                    'name' => 'auteur_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'articles',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Article',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'auteur_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'auteur_id' => 'auteur_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'auteur_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'images' => [
                            'fieldName' => 'images',
                            'mappedBy' => 'article',
                            'targetEntity' => 'App\\Entity\\Image',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Article',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'categorieArticle' => [
                            'fieldName' => 'categorieArticle',
                            'joinColumns' => [
                                [
                                    'name' => 'categorie_article_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'articles',
                            'targetEntity' => 'App\\Entity\\CategorieArticle',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Article',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'categorie_article_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'categorie_article_id' => 'categorie_article_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'categorie_article_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Partenariat',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Partenariat',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PartenariatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom',
                        ],
                        'entreprise' => [
                            'fieldName' => 'entreprise',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'entreprise',
                        ],
                        'mail' => [
                            'fieldName' => 'mail',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mail',
                        ],
                        'requete' => [
                            'fieldName' => 'requete',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'requete',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                        'reponse' => [
                            'fieldName' => 'reponse',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'reponse',
                        ],
                        'dateReponse' => [
                            'fieldName' => 'dateReponse',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'date_reponse',
                        ],
                        'telephone' => [
                            'fieldName' => 'telephone',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'telephone',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'entreprise' => 'entreprise',
                        'mail' => 'mail',
                        'requete' => 'requete',
                        'date' => 'date',
                        'etat' => 'etat',
                        'reponse' => 'reponse',
                        'date_reponse' => 'dateReponse',
                        'telephone' => 'telephone',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'entreprise' => 'entreprise',
                        'mail' => 'mail',
                        'requete' => 'requete',
                        'date' => 'date',
                        'etat' => 'etat',
                        'reponse' => 'reponse',
                        'dateReponse' => 'date_reponse',
                        'telephone' => 'telephone',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'partenariat',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\OffreEmplois',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\OffreEmplois',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\OffreEmploisRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'titre' => [
                            'fieldName' => 'titre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'titre',
                        ],
                        'domaine' => [
                            'fieldName' => 'domaine',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'domaine',
                        ],
                        'createAt' => [
                            'fieldName' => 'createAt',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'create_at',
                        ],
                        'endAt' => [
                            'fieldName' => 'endAt',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'end_at',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'slug' => [
                            'fieldName' => 'slug',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'slug',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'domaine' => 'domaine',
                        'create_at' => 'createAt',
                        'end_at' => 'endAt',
                        'description' => 'description',
                        'slug' => 'slug',
                        'etat' => 'etat',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'domaine' => 'domaine',
                        'createAt' => 'create_at',
                        'endAt' => 'end_at',
                        'description' => 'description',
                        'slug' => 'slug',
                        'etat' => 'etat',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'offre_emplois',
                    ],
                ],
                'associationMappings' => [
                    [
                        'membre' => [
                            'fieldName' => 'membre',
                            'joinColumns' => [
                                [
                                    'name' => 'membre_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'offreEmplois',
                            'targetEntity' => 'App\\Entity\\Membre',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\OffreEmplois',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'membre_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'membre_id' => 'membre_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'membre_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ResetPassword',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ResetPassword',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ResetPasswordRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'mail' => [
                            'fieldName' => 'mail',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mail',
                        ],
                        'telephone' => [
                            'fieldName' => 'telephone',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'telephone',
                        ],
                        'mode' => [
                            'fieldName' => 'mode',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mode',
                        ],
                        'code' => [
                            'fieldName' => 'code',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'code',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'mail' => 'mail',
                        'telephone' => 'telephone',
                        'mode' => 'mode',
                        'code' => 'code',
                        'etat' => 'etat',
                        'date' => 'date',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'mail' => 'mail',
                        'telephone' => 'telephone',
                        'mode' => 'mode',
                        'code' => 'code',
                        'etat' => 'etat',
                        'date' => 'date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reset_password',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Entreprise',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Entreprise',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\EntrepriseRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                        'domaine' => [
                            'fieldName' => 'domaine',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'domaine',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'adresses' => [
                            'fieldName' => 'adresses',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'adresses',
                        ],
                        'slug' => [
                            'fieldName' => 'slug',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'slug',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                        'logo' => [
                            'fieldName' => 'logo',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'logo',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'created_at',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'type',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'email',
                        ],
                        'instagram' => [
                            'fieldName' => 'instagram',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'instagram',
                        ],
                        'site' => [
                            'fieldName' => 'site',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'site',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'domaine' => 'domaine',
                        'description' => 'description',
                        'adresses' => 'adresses',
                        'slug' => 'slug',
                        'etat' => 'etat',
                        'logo' => 'logo',
                        'created_at' => 'createdAt',
                        'type' => 'type',
                        'email' => 'email',
                        'instagram' => 'instagram',
                        'site' => 'site',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'domaine' => 'domaine',
                        'description' => 'description',
                        'adresses' => 'adresses',
                        'slug' => 'slug',
                        'etat' => 'etat',
                        'logo' => 'logo',
                        'createdAt' => 'created_at',
                        'type' => 'type',
                        'email' => 'email',
                        'instagram' => 'instagram',
                        'site' => 'site',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'entreprise',
                    ],
                ],
                'associationMappings' => [
                    [
                        'proprietaire' => [
                            'fieldName' => 'proprietaire',
                            'joinColumns' => [
                                [
                                    'name' => 'proprietaire_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'entreprises',
                            'targetEntity' => 'App\\Entity\\Membre',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Entreprise',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'proprietaire_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'proprietaire_id' => 'proprietaire_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'proprietaire_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Cotisation',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Cotisation',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CotisationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'titre' => [
                            'fieldName' => 'titre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'titre',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'montant' => [
                            'fieldName' => 'montant',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'montant',
                        ],
                        'solde' => [
                            'fieldName' => 'solde',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'solde',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'type',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created_at',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'description' => 'description',
                        'montant' => 'montant',
                        'solde' => 'solde',
                        'type' => 'type',
                        'created_at' => 'createdAt',
                        'etat' => 'etat',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'description' => 'description',
                        'montant' => 'montant',
                        'solde' => 'solde',
                        'type' => 'type',
                        'createdAt' => 'created_at',
                        'etat' => 'etat',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'cotisation',
                    ],
                ],
                'associationMappings' => [
                    [
                        'contributeurs' => [
                            'fieldName' => 'contributeurs',
                            'joinTable' => [
                                'name' => 'cotisation_membre',
                                'joinColumns' => [
                                    [
                                        'name' => 'cotisation_id',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                                'inverseJoinColumns' => [
                                    [
                                        'name' => 'membre_id',
                                        'referencedColumnName' => 'id',
                                        'onDelete' => 'CASCADE',
                                    ],
                                ],
                            ],
                            'targetEntity' => 'App\\Entity\\Membre',
                            'mappedBy' => null,
                            'inversedBy' => 'cotisations',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Cotisation',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'joinTableColumns' => [
                                'cotisation_id',
                                'membre_id',
                            ],
                            'isOnDeleteCascade' => true,
                            'relationToSourceKeyColumns' => [
                                'cotisation_id' => 'id',
                            ],
                            'relationToTargetKeyColumns' => [
                                'membre_id' => 'id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\PageAccueil',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\PageAccueil',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PageAccueilRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'carouselTitre1' => [
                            'fieldName' => 'carouselTitre1',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'carousel_titre1',
                        ],
                        'carouselTitre2' => [
                            'fieldName' => 'carouselTitre2',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'carousel_titre2',
                        ],
                        'carouselTitre3' => [
                            'fieldName' => 'carouselTitre3',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'carousel_titre3',
                        ],
                        'carouselText1' => [
                            'fieldName' => 'carouselText1',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'carousel_text1',
                        ],
                        'carouselText2' => [
                            'fieldName' => 'carouselText2',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'carousel_text2',
                        ],
                        'carouselText3' => [
                            'fieldName' => 'carouselText3',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'carousel_text3',
                        ],
                        'carouselImage1' => [
                            'fieldName' => 'carouselImage1',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'carousel_image1',
                        ],
                        'carouselImage2' => [
                            'fieldName' => 'carouselImage2',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'carousel_image2',
                        ],
                        'carouselImage3' => [
                            'fieldName' => 'carouselImage3',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'carousel_image3',
                        ],
                        'missionTitre' => [
                            'fieldName' => 'missionTitre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mission_titre',
                        ],
                        'missionText' => [
                            'fieldName' => 'missionText',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mission_text',
                        ],
                        'chiffreAlumni' => [
                            'fieldName' => 'chiffreAlumni',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'chiffre_alumni',
                        ],
                        'chiffreProjet' => [
                            'fieldName' => 'chiffreProjet',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'chiffre_projet',
                        ],
                        'chiffreFonds' => [
                            'fieldName' => 'chiffreFonds',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'chiffre_fonds',
                        ],
                        'chiffreAlumniText' => [
                            'fieldName' => 'chiffreAlumniText',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'chiffre_alumni_text',
                        ],
                        'chiffreProjetText' => [
                            'fieldName' => 'chiffreProjetText',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'chiffre_projet_text',
                        ],
                        'chiffreFondsText' => [
                            'fieldName' => 'chiffreFondsText',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'chiffre_fonds_text',
                        ],
                        'entrepriseTitre' => [
                            'fieldName' => 'entrepriseTitre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'entreprise_titre',
                        ],
                        'entrepriseTexte' => [
                            'fieldName' => 'entrepriseTexte',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'entreprise_texte',
                        ],
                        'temoignageAuteur1' => [
                            'fieldName' => 'temoignageAuteur1',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_auteur1',
                        ],
                        'temoignageAuteur2' => [
                            'fieldName' => 'temoignageAuteur2',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_auteur2',
                        ],
                        'temoignageAuteur3' => [
                            'fieldName' => 'temoignageAuteur3',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_auteur3',
                        ],
                        'temoignageAuteur4' => [
                            'fieldName' => 'temoignageAuteur4',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_auteur4',
                        ],
                        'temoignageTitre1' => [
                            'fieldName' => 'temoignageTitre1',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_titre1',
                        ],
                        'temoignageTitre2' => [
                            'fieldName' => 'temoignageTitre2',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_titre2',
                        ],
                        'temoignageText1' => [
                            'fieldName' => 'temoignageText1',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_text1',
                        ],
                        'temoignageText2' => [
                            'fieldName' => 'temoignageText2',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_text2',
                        ],
                        'temoignageText4' => [
                            'fieldName' => 'temoignageText4',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_text4',
                        ],
                        'temoignageText3' => [
                            'fieldName' => 'temoignageText3',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'temoignage_text3',
                        ],
                        'membreTitre' => [
                            'fieldName' => 'membreTitre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'membre_titre',
                        ],
                        'membreText' => [
                            'fieldName' => 'membreText',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'membre_text',
                        ],
                        'missionImg' => [
                            'fieldName' => 'missionImg',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'mission_img',
                        ],
                        'ancienneImg1' => [
                            'fieldName' => 'ancienneImg1',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'ancienne_img1',
                        ],
                        'ancienneImg2' => [
                            'fieldName' => 'ancienneImg2',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'ancienne_img2',
                        ],
                        'ancienneImg3' => [
                            'fieldName' => 'ancienneImg3',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'ancienne_img3',
                        ],
                        'blogTitre' => [
                            'fieldName' => 'blogTitre',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'blog_titre',
                        ],
                        'blogText' => [
                            'fieldName' => 'blogText',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'blog_text',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'carousel_titre1' => 'carouselTitre1',
                        'carousel_titre2' => 'carouselTitre2',
                        'carousel_titre3' => 'carouselTitre3',
                        'carousel_text1' => 'carouselText1',
                        'carousel_text2' => 'carouselText2',
                        'carousel_text3' => 'carouselText3',
                        'carousel_image1' => 'carouselImage1',
                        'carousel_image2' => 'carouselImage2',
                        'carousel_image3' => 'carouselImage3',
                        'mission_titre' => 'missionTitre',
                        'mission_text' => 'missionText',
                        'chiffre_alumni' => 'chiffreAlumni',
                        'chiffre_projet' => 'chiffreProjet',
                        'chiffre_fonds' => 'chiffreFonds',
                        'chiffre_alumni_text' => 'chiffreAlumniText',
                        'chiffre_projet_text' => 'chiffreProjetText',
                        'chiffre_fonds_text' => 'chiffreFondsText',
                        'entreprise_titre' => 'entrepriseTitre',
                        'entreprise_texte' => 'entrepriseTexte',
                        'temoignage_auteur1' => 'temoignageAuteur1',
                        'temoignage_auteur2' => 'temoignageAuteur2',
                        'temoignage_auteur3' => 'temoignageAuteur3',
                        'temoignage_auteur4' => 'temoignageAuteur4',
                        'temoignage_titre1' => 'temoignageTitre1',
                        'temoignage_titre2' => 'temoignageTitre2',
                        'temoignage_text1' => 'temoignageText1',
                        'temoignage_text2' => 'temoignageText2',
                        'temoignage_text4' => 'temoignageText4',
                        'temoignage_text3' => 'temoignageText3',
                        'membre_titre' => 'membreTitre',
                        'membre_text' => 'membreText',
                        'mission_img' => 'missionImg',
                        'ancienne_img1' => 'ancienneImg1',
                        'ancienne_img2' => 'ancienneImg2',
                        'ancienne_img3' => 'ancienneImg3',
                        'blog_titre' => 'blogTitre',
                        'blog_text' => 'blogText',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'carouselTitre1' => 'carousel_titre1',
                        'carouselTitre2' => 'carousel_titre2',
                        'carouselTitre3' => 'carousel_titre3',
                        'carouselText1' => 'carousel_text1',
                        'carouselText2' => 'carousel_text2',
                        'carouselText3' => 'carousel_text3',
                        'carouselImage1' => 'carousel_image1',
                        'carouselImage2' => 'carousel_image2',
                        'carouselImage3' => 'carousel_image3',
                        'missionTitre' => 'mission_titre',
                        'missionText' => 'mission_text',
                        'chiffreAlumni' => 'chiffre_alumni',
                        'chiffreProjet' => 'chiffre_projet',
                        'chiffreFonds' => 'chiffre_fonds',
                        'chiffreAlumniText' => 'chiffre_alumni_text',
                        'chiffreProjetText' => 'chiffre_projet_text',
                        'chiffreFondsText' => 'chiffre_fonds_text',
                        'entrepriseTitre' => 'entreprise_titre',
                        'entrepriseTexte' => 'entreprise_texte',
                        'temoignageAuteur1' => 'temoignage_auteur1',
                        'temoignageAuteur2' => 'temoignage_auteur2',
                        'temoignageAuteur3' => 'temoignage_auteur3',
                        'temoignageAuteur4' => 'temoignage_auteur4',
                        'temoignageTitre1' => 'temoignage_titre1',
                        'temoignageTitre2' => 'temoignage_titre2',
                        'temoignageText1' => 'temoignage_text1',
                        'temoignageText2' => 'temoignage_text2',
                        'temoignageText4' => 'temoignage_text4',
                        'temoignageText3' => 'temoignage_text3',
                        'membreTitre' => 'membre_titre',
                        'membreText' => 'membre_text',
                        'missionImg' => 'mission_img',
                        'ancienneImg1' => 'ancienne_img1',
                        'ancienneImg2' => 'ancienne_img2',
                        'ancienneImg3' => 'ancienne_img3',
                        'blogTitre' => 'blog_titre',
                        'blogText' => 'blog_text',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'page_accueil',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Demande',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Demande',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DemandeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom',
                        ],
                        'mail' => [
                            'fieldName' => 'mail',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mail',
                        ],
                        'promotion' => [
                            'fieldName' => 'promotion',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'promotion',
                        ],
                        'pays' => [
                            'fieldName' => 'pays',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'pays',
                        ],
                        'ville' => [
                            'fieldName' => 'ville',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'ville',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                        'telephone' => [
                            'fieldName' => 'telephone',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'telephone',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'mail' => 'mail',
                        'promotion' => 'promotion',
                        'pays' => 'pays',
                        'ville' => 'ville',
                        'date' => 'date',
                        'etat' => 'etat',
                        'telephone' => 'telephone',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'mail' => 'mail',
                        'promotion' => 'promotion',
                        'pays' => 'pays',
                        'ville' => 'ville',
                        'date' => 'date',
                        'etat' => 'etat',
                        'telephone' => 'telephone',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'demande',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Depot',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Transaction',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DepotRepository',
                ],
                'parentClasses' => [
                    [
                        'App\\Entity\\Transaction',
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'inheritanceType' => [
                    2,
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'montant' => [
                            'fieldName' => 'montant',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'montant',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'type',
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                        'reference' => [
                            'fieldName' => 'reference',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'reference',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                        'numero' => [
                            'fieldName' => 'numero',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'numero',
                        ],
                        'moyen' => [
                            'fieldName' => 'moyen',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'moyen',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'montant' => 'montant',
                        'type' => 'type',
                        'reference' => 'reference',
                        'etat' => 'etat',
                        'numero' => 'numero',
                        'moyen' => 'moyen',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'montant' => 'montant',
                        'type' => 'type',
                        'reference' => 'reference',
                        'etat' => 'etat',
                        'numero' => 'numero',
                        'moyen' => 'moyen',
                    ],
                ],
                'discriminatorValue' => [
                    'depot',
                ],
                'discriminatorMap' => [
                    [
                        'achat' => 'App\\Entity\\Achat',
                        'depot' => 'App\\Entity\\Depot',
                        'cotisation' => 'App\\Entity\\CotisationTransaction',
                    ],
                ],
                'discriminatorColumn' => [
                    [
                        'name' => 'dtype',
                        'type' => 'string',
                        'length' => 255,
                        'fieldName' => 'dtype',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'depot',
                    ],
                ],
                'associationMappings' => [
                    [
                        'wallet' => [
                            'fieldName' => 'wallet',
                            'joinColumns' => [
                                [
                                    'name' => 'wallet_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'transactions',
                            'targetEntity' => 'App\\Entity\\Wallet',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Transaction',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'wallet_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'wallet_id' => 'wallet_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'wallet_id',
                            ],
                            'orphanRemoval' => false,
                            'inherited' => 'App\\Entity\\Transaction',
                            'declared' => 'App\\Entity\\Transaction',
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Membre',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MembreRepository',
                ],
                'parentClasses' => [
                    [
                        'App\\Entity\\User',
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'inheritanceType' => [
                    2,
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'promotion' => [
                            'fieldName' => 'promotion',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'promotion',
                        ],
                        'pays' => [
                            'fieldName' => 'pays',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'pays',
                        ],
                        'ville' => [
                            'fieldName' => 'ville',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'ville',
                        ],
                        'telephone' => [
                            'fieldName' => 'telephone',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'telephone',
                        ],
                        'statut' => [
                            'fieldName' => 'statut',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'statut',
                        ],
                        'cv' => [
                            'fieldName' => 'cv',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'cv',
                        ],
                        'profile' => [
                            'fieldName' => 'profile',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'profile',
                        ],
                        'profession' => [
                            'fieldName' => 'profession',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'profession',
                        ],
                        'secteur' => [
                            'fieldName' => 'secteur',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'secteur',
                        ],
                        'entreprise' => [
                            'fieldName' => 'entreprise',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'entreprise',
                        ],
                        'roleAmicale' => [
                            'fieldName' => 'roleAmicale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'role_amicale',
                        ],
                        'bac' => [
                            'fieldName' => 'bac',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 25,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'bac',
                        ],
                        'univ' => [
                            'fieldName' => 'univ',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'univ',
                        ],
                        'diplome' => [
                            'fieldName' => 'diplome',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'diplome',
                        ],
                        'experience' => [
                            'fieldName' => 'experience',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'experience',
                        ],
                        'link' => [
                            'fieldName' => 'link',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'link',
                        ],
                        'bio' => [
                            'fieldName' => 'bio',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'bio',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'promotion' => 'promotion',
                        'pays' => 'pays',
                        'ville' => 'ville',
                        'telephone' => 'telephone',
                        'statut' => 'statut',
                        'cv' => 'cv',
                        'profile' => 'profile',
                        'profession' => 'profession',
                        'secteur' => 'secteur',
                        'entreprise' => 'entreprise',
                        'role_amicale' => 'roleAmicale',
                        'bac' => 'bac',
                        'univ' => 'univ',
                        'diplome' => 'diplome',
                        'experience' => 'experience',
                        'link' => 'link',
                        'bio' => 'bio',
                        'etat' => 'etat',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'promotion' => 'promotion',
                        'pays' => 'pays',
                        'ville' => 'ville',
                        'telephone' => 'telephone',
                        'statut' => 'statut',
                        'cv' => 'cv',
                        'profile' => 'profile',
                        'profession' => 'profession',
                        'secteur' => 'secteur',
                        'entreprise' => 'entreprise',
                        'roleAmicale' => 'role_amicale',
                        'bac' => 'bac',
                        'univ' => 'univ',
                        'diplome' => 'diplome',
                        'experience' => 'experience',
                        'link' => 'link',
                        'bio' => 'bio',
                        'etat' => 'etat',
                    ],
                ],
                'discriminatorValue' => [
                    'membre',
                ],
                'discriminatorMap' => [
                    [
                        'membre' => 'App\\Entity\\Membre',
                        'client' => 'App\\Entity\\Client',
                        'admin' => 'App\\Entity\\Admin',
                        'super_admin' => 'App\\Entity\\SuperAdmin',
                    ],
                ],
                'discriminatorColumn' => [
                    [
                        'name' => 'dtype',
                        'type' => 'string',
                        'length' => 255,
                        'fieldName' => 'dtype',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'membre',
                    ],
                ],
                'associationMappings' => [
                    [
                        'articles' => [
                            'fieldName' => 'articles',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Article',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'sujets' => [
                            'fieldName' => 'sujets',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Sujet',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'commandes' => [
                            'fieldName' => 'commandes',
                            'mappedBy' => 'client',
                            'targetEntity' => 'App\\Entity\\Commande',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'wallet' => [
                            'fieldName' => 'wallet',
                            'targetEntity' => 'App\\Entity\\Wallet',
                            'joinColumns' => [],
                            'mappedBy' => 'membre',
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Membre',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'entreprises' => [
                            'fieldName' => 'entreprises',
                            'mappedBy' => 'proprietaire',
                            'targetEntity' => 'App\\Entity\\Entreprise',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Membre',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'offreEmplois' => [
                            'fieldName' => 'offreEmplois',
                            'mappedBy' => 'membre',
                            'targetEntity' => 'App\\Entity\\OffreEmplois',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Membre',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'cotisations' => [
                            'fieldName' => 'cotisations',
                            'joinTable' => [],
                            'targetEntity' => 'App\\Entity\\Cotisation',
                            'mappedBy' => 'contributeurs',
                            'inversedBy' => null,
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 8,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Membre',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Evenement',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Evenement',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\EvenementRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                        ],
                        'startAt' => [
                            'fieldName' => 'startAt',
                            'type' => 'time',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'start_at',
                        ],
                        'endAt' => [
                            'fieldName' => 'endAt',
                            'type' => 'time',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'end_at',
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'title',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'start_at' => 'startAt',
                        'end_at' => 'endAt',
                        'title' => 'title',
                        'content' => 'content',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'startAt' => 'start_at',
                        'endAt' => 'end_at',
                        'title' => 'title',
                        'content' => 'content',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'evenement',
                    ],
                ],
                'associationMappings' => [
                    [
                        'categorie' => [
                            'fieldName' => 'categorie',
                            'joinColumns' => [
                                [
                                    'name' => 'categorie_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'evenements',
                            'targetEntity' => 'App\\Entity\\CategorieEvenement',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Evenement',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'categorie_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'categorie_id' => 'categorie_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'categorie_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'commentaires' => [
                            'fieldName' => 'commentaires',
                            'mappedBy' => 'evenement',
                            'targetEntity' => 'App\\Entity\\Commentaire',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Evenement',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'images' => [
                            'fieldName' => 'images',
                            'mappedBy' => 'evenement',
                            'targetEntity' => 'App\\Entity\\Image',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Evenement',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Letter',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Letter',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\LetterRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'content' => [
                            'fieldName' => 'content',
                            'type' => 'text',
                            'scale' => null,
                            'length' => 65535,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'content',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created_at',
                        ],
                        'titre' => [
                            'fieldName' => 'titre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'titre',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'created_at' => 'createdAt',
                        'titre' => 'titre',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'content' => 'content',
                        'createdAt' => 'created_at',
                        'titre' => 'titre',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'letter',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Abonne',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Abonne',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AbonneRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom',
                        ],
                        'mail' => [
                            'fieldName' => 'mail',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mail',
                        ],
                        'status' => [
                            'fieldName' => 'status',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'status',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'mail' => 'mail',
                        'status' => 'status',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'mail' => 'mail',
                        'status' => 'status',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'abonne',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Thematique',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Thematique',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ThematiqueRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'libelle' => [
                            'fieldName' => 'libelle',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'libelle',
                        ],
                        'status' => [
                            'fieldName' => 'status',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'status',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                        'status' => 'status',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                        'status' => 'status',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'thematique',
                    ],
                ],
                'associationMappings' => [
                    [
                        'sujets' => [
                            'fieldName' => 'sujets',
                            'mappedBy' => 'thematique',
                            'targetEntity' => 'App\\Entity\\Sujet',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Thematique',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Produit',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Produit',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProduitRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'libelle' => [
                            'fieldName' => 'libelle',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'libelle',
                        ],
                        'prix' => [
                            'fieldName' => 'prix',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prix',
                        ],
                        'qte_stock' => [
                            'fieldName' => 'qte_stock',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'qte_stock',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'slug' => [
                            'fieldName' => 'slug',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'slug',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                        'prix' => 'prix',
                        'qte_stock' => 'qte_stock',
                        'etat' => 'etat',
                        'description' => 'description',
                        'slug' => 'slug',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                        'prix' => 'prix',
                        'qte_stock' => 'qte_stock',
                        'etat' => 'etat',
                        'description' => 'description',
                        'slug' => 'slug',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'produit',
                    ],
                ],
                'associationMappings' => [
                    [
                        'images' => [
                            'fieldName' => 'images',
                            'mappedBy' => 'produit',
                            'targetEntity' => 'App\\Entity\\Image',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Produit',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'categorie' => [
                            'fieldName' => 'categorie',
                            'joinColumns' => [
                                [
                                    'name' => 'categorie_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'produits',
                            'targetEntity' => 'App\\Entity\\CategorieProduit',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Produit',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'categorie_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'categorie_id' => 'categorie_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'categorie_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'detailCommandes' => [
                            'fieldName' => 'detailCommandes',
                            'mappedBy' => 'produit',
                            'targetEntity' => 'App\\Entity\\DetailCommande',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Produit',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Sujet',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Sujet',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SujetRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'contenu' => [
                            'fieldName' => 'contenu',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'contenu',
                        ],
                        'createdAt' => [
                            'fieldName' => 'createdAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'created_at',
                        ],
                        'publishedAt' => [
                            'fieldName' => 'publishedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'published_at',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                        'lisibilite' => [
                            'fieldName' => 'lisibilite',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'lisibilite',
                        ],
                        'slug' => [
                            'fieldName' => 'slug',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'slug',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'contenu' => 'contenu',
                        'created_at' => 'createdAt',
                        'published_at' => 'publishedAt',
                        'etat' => 'etat',
                        'lisibilite' => 'lisibilite',
                        'slug' => 'slug',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'contenu' => 'contenu',
                        'createdAt' => 'created_at',
                        'publishedAt' => 'published_at',
                        'etat' => 'etat',
                        'lisibilite' => 'lisibilite',
                        'slug' => 'slug',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'sujet',
                    ],
                ],
                'associationMappings' => [
                    [
                        'commentaires' => [
                            'fieldName' => 'commentaires',
                            'mappedBy' => 'sujet',
                            'targetEntity' => 'App\\Entity\\Commentaire',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Sujet',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'auteur' => [
                            'fieldName' => 'auteur',
                            'joinColumns' => [
                                [
                                    'name' => 'auteur_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'sujets',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Sujet',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'auteur_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'auteur_id' => 'auteur_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'auteur_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'thematique' => [
                            'fieldName' => 'thematique',
                            'joinColumns' => [
                                [
                                    'name' => 'thematique_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'sujets',
                            'targetEntity' => 'App\\Entity\\Thematique',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Sujet',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'thematique_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'thematique_id' => 'thematique_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'thematique_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Footer',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Footer',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\FooterRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'mail' => [
                            'fieldName' => 'mail',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'mail',
                        ],
                        'facebook' => [
                            'fieldName' => 'facebook',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'facebook',
                        ],
                        'instagram' => [
                            'fieldName' => 'instagram',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'instagram',
                        ],
                        'twitter' => [
                            'fieldName' => 'twitter',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'twitter',
                        ],
                        'whatsapp' => [
                            'fieldName' => 'whatsapp',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'whatsapp',
                        ],
                        'youtube' => [
                            'fieldName' => 'youtube',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'youtube',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'mail' => 'mail',
                        'facebook' => 'facebook',
                        'instagram' => 'instagram',
                        'twitter' => 'twitter',
                        'whatsapp' => 'whatsapp',
                        'youtube' => 'youtube',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'mail' => 'mail',
                        'facebook' => 'facebook',
                        'instagram' => 'instagram',
                        'twitter' => 'twitter',
                        'whatsapp' => 'whatsapp',
                        'youtube' => 'youtube',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'footer',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\CategorieProduit',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\CategorieProduit',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CategorieProduitRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'libelle' => [
                            'fieldName' => 'libelle',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'libelle',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'libelle' => 'libelle',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'categorie_produit',
                    ],
                ],
                'associationMappings' => [
                    [
                        'produits' => [
                            'fieldName' => 'produits',
                            'mappedBy' => 'categorie',
                            'targetEntity' => 'App\\Entity\\Produit',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\CategorieProduit',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Partenaire',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Partenaire',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PartenaireRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'logo' => [
                            'fieldName' => 'logo',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'logo',
                        ],
                        'etat' => [
                            'fieldName' => 'etat',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'etat',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'description' => 'description',
                        'logo' => 'logo',
                        'etat' => 'etat',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'description' => 'description',
                        'logo' => 'logo',
                        'etat' => 'etat',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'partenaire',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\SuperAdmin',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SuperAdminRepository',
                ],
                'parentClasses' => [
                    [
                        'App\\Entity\\User',
                    ],
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'inheritanceType' => [
                    2,
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'prenom' => [
                            'fieldName' => 'prenom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prenom',
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                    ],
                ],
                'discriminatorValue' => [
                    'super_admin',
                ],
                'discriminatorMap' => [
                    [
                        'membre' => 'App\\Entity\\Membre',
                        'client' => 'App\\Entity\\Client',
                        'admin' => 'App\\Entity\\Admin',
                        'super_admin' => 'App\\Entity\\SuperAdmin',
                    ],
                ],
                'discriminatorColumn' => [
                    [
                        'name' => 'dtype',
                        'type' => 'string',
                        'length' => 255,
                        'fieldName' => 'dtype',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'super_admin',
                    ],
                ],
                'associationMappings' => [
                    [
                        'articles' => [
                            'fieldName' => 'articles',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Article',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'sujets' => [
                            'fieldName' => 'sujets',
                            'mappedBy' => 'auteur',
                            'targetEntity' => 'App\\Entity\\Sujet',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                        'commandes' => [
                            'fieldName' => 'commandes',
                            'mappedBy' => 'client',
                            'targetEntity' => 'App\\Entity\\Commande',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'inherited' => 'App\\Entity\\User',
                            'declared' => 'App\\Entity\\User',
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
